@using System.Globalization
@model Dictionary<string, List<ExaminationDashboardViewModel>>

@{
	ViewData["Title"] = "Doctor Dashboard";
}
<div class="card border-secondary mb-3" style="margin: 10px 0px">
	<h3 class="card-header text-center">Welcome, Doctor!</h3>
	<div class="card-body">
		<div class="row">
			@foreach (var statusGroup in Model.Where(s => s.Key != "Done"))
			{
				<div class="col-md-4">
					<h3 class="card-header">@statusGroup.Key</h3>
					<ul class="list-group">
						@foreach (var examination in statusGroup.Value)
						{
							<li class="list-group-item d-flex justify-content-between align-items-center">
								@if (statusGroup.Key == "New" && examination.CreatedOn < DateTime.Now)
								{
									continue;
								}
								<p class="mb-0">@examination.CreatedOn.ToString("dd/MM/yyyy") - @examination.DoctorName <br />
									@examination.PatientName - @examination.PatientType</p>
								<p class="mb-0">
									<a class="btn btn-info btn-sm" asp-action="Details" asp-controller="Patient" asp-route-patientId="@examination.PatientId">Details</a>
									<a class="btn btn-warning btn-sm" asp-action="Edit" asp-controller="Examination" asp-route-examinationId="@examination.Id">Edit</a>
								</p>
							</li>
						}
					</ul>
				</div>
			}
		</div>
	</div>
</div>
