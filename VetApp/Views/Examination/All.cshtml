@using System.Globalization
@model AllExaminationsQueryModel

@{
	ViewData["Title"] = "All Examinations";
	Pager pager = ViewBag.Pager;
}

<partial name="_NotificationPartial" />

<form method="get" class="mt-2">
	<div class="d-flex align-items-center justify-content-end">

		<div class="form-group col-md-3 col-lg-2">
			<label asp-for="SearchString"></label>
			<input asp-for="SearchString" class="form-control" placeholder="...">
		</div>

		<div class="form-group col-md-3">
			<div class="form-group">
				<label asp-for="ExaminationSorting"></label>
				<select asp-for="ExaminationSorting" class="form-control">
					<option value="1">Status Name (Ascending)</option>
					<option value="2">Status Name (Descending)</option>
					<option value="3">Doctor Last Name (Ascending)</option>
					<option value="4">Doctor Last Name (Descending)</option>
					<option value="5">Created on (Ascending)</option>
					<option value="6">Created on (Descending)</option>
				</select>
			</div>
		</div>

		<div class="form-group col-1 col-md-1 col-lg-1 col-xl-1">
			<div class="form-group">
				<label asp-for="ExaminationsPerPage"></label>
				<select asp-for="ExaminationsPerPage" class="form-control">
					<option value="5">5</option>
					<option value="10">10</option>
					<option value="15">15</option>
					<option value="20">20</option>
				</select>
			</div>
		</div>

		<div class="col-2 col-md-2 col-lg-1 mt-4">
			<div class="form-group ">
				<span class="float-end">
					<input type="submit" value="Search" class="btn btn-secondary" />
				</span>
			</div>
		</div>

	</div>
</form>

<div class="card border-secondary mb-3" style="margin: 10px 0px">
	<h3 class="card-header text-center">Examinations</h3>

	<div class="card-body">
		@if (Model.Examinations.Any())
		{
			<div class="table-responsive">
				<table class="table table-secondary">
					<thead>
						<tr>
							<th>
								Created On
							</th>
							<th>
								Reason
							</th>
							<th>
								Doctor
							</th>
							<th>
								Status
							</th>
							<th>
								Details
							</th>
							<th>
								Edit
							</th>
							<th>
								Delete
							</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var examination in Model.Examinations)
						{
							<tr class="table-dark">
								<td>
									@examination.CreatedOn.ToString("yyyy-MM-dd")
								</td>
								<td>
									@examination.Reason
								</td>
								<td>
									@examination.DoctorName
								</td>
								<td>
									@examination.StatusName
								</td>
								<td>
									<a class="btn btn-outline-primary btn-sm text-white" asp-controller="Examination" asp-action="Details" asp-route-examinationId="@examination.Id">Details</a>
								</td>
								<td>
									<a class="btn btn-outline-warning btn-sm text-white" asp-controller="Examination" asp-action="Edit" asp-route-examinationId="@examination.Id" asp-route-patientId="@examination.PatientId">Edit</a>
								</td>
								<td>

									<a class="btn btn-outline-danger btn-sm text-white @(examination.StatusName == "Done" ? "disabled" : string.Empty)" asp-controller="Examination" asp-action="Delete" asp-route-examinationId="@examination.Id">Delete</a>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>

		}
		else
		{
			<h3 class="text-center">No examinations yet!</h3>
		}

	</div>

	<div class="card-footer">
		<partial name="_PaginationBottomBarPartial" model="pager" />
	</div>
</div>


<div class="container mt-1">
	@if (pager.TotalPages > 0)
	{
		<ul class="pagination justify-content-center">

			@if (pager.HasPreviousPage)
			{

				<li class="page-item">
					<a class="page-link"
					   asp-controller="Examination"
					   asp-action="All"
					   asp-route-currentPage="1"
					   asp-route-examinationsPerPage="@Model.ExaminationsPerPage"
					   asp-route-searchString="@Model.SearchString"
					   asp-route-examinationSorting="@((int)Model.ExaminationSorting)">First</a>
				</li>

				<li class="page-item">
					<a class="page-link"
					   asp-controller="Examination"
					   asp-action="All"
					   asp-route-currentPage="@(Model.CurrentPage - 1)"
					   asp-route-examinationsPerPage="@Model.ExaminationsPerPage"
					   asp-route-searchString="@Model.SearchString"
					   asp-route-examinationSorting="@((int)Model.ExaminationSorting)">Previous</a>
				</li>

			}

			@for (int i = pager.StartPage; i <= pager.EndPage; i++)
			{

				<li class="page-item @(i==Model.CurrentPage ? "active" : string.Empty)">
					@if (i != Model.CurrentPage)
					{
						<a class="page-link"
						   asp-controller="Examination"
						   asp-action="All"
						   asp-route-currentPage="@i"
						   asp-route-examinationsPerPage="@Model.ExaminationsPerPage"
						   asp-route-searchString="@Model.SearchString"
						   asp-route-examinationSorting="@((int)Model.ExaminationSorting)">@i</a>
					}
					else
					{
						<span class="page-link">@i</span>
					}
				</li>
			}

			@if (pager.HasNextPage)
			{
				<li class="page-item">
					<a class="page-link"
					   asp-controller="Examination"
					   asp-action="All"
					   asp-route-currentPage="@(Model.CurrentPage + 1)"
					   asp-route-examinationsPerPage="@Model.ExaminationsPerPage"
					   asp-route-searchString="@Model.SearchString"
					   asp-route-examinationSorting="@((int)Model.ExaminationSorting)">Next</a>
				</li>

				<li class="page-item">
					<a class="page-link"
					   asp-controller="Examination"
					   asp-action="All"
					   asp-route-currentPage="@pager.TotalPages"
					   asp-route-examinationsPerPage="@Model.ExaminationsPerPage"
					   asp-route-searchString="@Model.SearchString"
					   asp-route-examinationSorting="@((int)Model.ExaminationSorting)">Last</a>
				</li>
			}

		</ul>
	}
</div>