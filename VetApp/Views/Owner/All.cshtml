@model AllOwnersQueryModel

@{
	ViewData["Title"] = "All Owners";
	Pager pager = new();
	int pageNo = 0;

	if (ViewBag.Pager != null)
	{
		pager = ViewBag.Pager;
		pageNo = pager.CurrentPage;
	}
}

<partial name="_NotificationPartial" />

<form method="get">
	<div class="d-flex align-items-center justify-content-between">

		<div class="form-group col-md-3">
			<label asp-for="SearchString"></label>
			<input asp-for="SearchString" class="form-control" placeholder="...">
		</div>

		<div class="form-group col-md-3">
			<div class="form-group">
				<label asp-for="OwnerSorting"></label>
				<select asp-for="OwnerSorting" class="form-control">
					<option value="0">Owner Name (Ascending)</option>
					<option value="1">Owner Name (Descending)</option>
					<option value="2">Animals Count (Ascending)</option>
					<option value="3">Animals Count (Descending)</option>
				</select>
			</div>
		</div>

		<div class="form-group col-md-3">
			<div class="form-group">
				<label asp-for="OwnersPerPage"></label>
				<select asp-for="OwnersPerPage" class="form-control">
					<option value="3">3</option>
					<option value="6">6</option>
					<option value="9">9</option>
				</select>
			</div>
		</div>

		<div class="col-md-3">
			<div class="form-group mt-4">
				<input type="submit" value="Search" class="btn btn-secondary" />
			</div>
		</div>

	</div>
</form>
@* 
@{
	var prevDisabled = !Model.HasPreviousPage ? "disabled" : string.Empty;
	var nextDisabled = !Model.HasNextPage ? "disabled" : string.Empty;
}



<div class="row mb-5">
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
		<a class="btn btn-primary btn-sm @prevDisabled"
		   asp-controller="Owner"
		   asp-action="All"
		   asp-route-currentPage="@(Model.CurrentPage - 1)"
		   asp-route-ownersPerPage="@Model.OwnersPerPage"
		   asp-route-searchString="@Model.SearchString"
		   asp-route-ownerSorting="@((int)Model.OwnerSorting)">Previous</a>
	</div>

	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
		<a class="btn btn-primary btn-sm @nextDisabled"
		   asp-controller="Owner"
		   asp-action="All"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-ownersPerPage="@Model.OwnersPerPage"
		   asp-route-searchString="@Model.SearchString"
		   asp-route-ownerSorting="@((int)Model.OwnerSorting)">Next</a>
	</div>
</div> *@

<div class="card border-secondary mb-3" style="margin: 10px 0px">
	<h3 class="card-header text-center">Owners</h3>

	<div class="card-body">

		@if (!Model.Owners.Any())
		{
			<h3 class="text-center">No owners yet!</h3>
		}
		else
		{
			<div class="row row-cols-1 row-cols-md-2 row-cols-lg-3">
				@foreach (var owner in Model.Owners)
				{
					<partial name="_OwnerAllPartial" model="@owner" />
				}
			</div>
		}
	</div>
</div>

<div class="container mt-1">
	@if (pager.TotalPages > 0)
	{
		<ul class="pagination justify-content-center">

			@if (pager.HasPreviousPage)
			{

				<li class="page-item">
					<a class="page-link"
					   asp-controller="Owner"
					   asp-action="All"
					   asp-route-currentPage="1"
					   asp-route-ownersPerPage="@Model.OwnersPerPage"
					   asp-route-searchString="@Model.SearchString"
					   asp-route-ownerSorting="@((int)Model.OwnerSorting)">First</a>
				</li>

				<li class="page-item">
					<a class="page-link"
					   asp-controller="Owner"
					   asp-action="All"
					   asp-route-currentPage="@(Model.CurrentPage - 1)"
					   asp-route-ownersPerPage="@Model.OwnersPerPage"
					   asp-route-searchString="@Model.SearchString"
					   asp-route-ownerSorting="@((int)Model.OwnerSorting)">Previous</a>
				</li>

			}

			@for (int i = pager.StartPage; i < pager.EndPage; i++)
			{

				<li class="page-item @(i==Model.CurrentPage ? "active" : string.Empty)">
					@if (i != Model.CurrentPage)
					{
						<a class="page-link"
						   asp-controller="Owner"
						   asp-action="All"
						   asp-route-currentPage="@i"
						   asp-route-ownersPerPage="@Model.OwnersPerPage"
						   asp-route-searchString="@Model.SearchString"
						   asp-route-ownerSorting="@((int)Model.OwnerSorting)">@i</a>
					}
					else
					{
						<span class="page-link">@i</span>
					}
				</li>
			}

			@if (pager.HasNextPage)
			{
				<li class="page-item">
					<a class="page-link"
					   asp-controller="Owner"
					   asp-action="All"
					   asp-route-currentPage="@(Model.CurrentPage + 1)"
					   asp-route-ownersPerPage="@Model.OwnersPerPage"
					   asp-route-searchString="@Model.SearchString"
					   asp-route-ownerSorting="@((int)Model.OwnerSorting)">Next</a>
				</li>

				<li class="page-item">
					<a class="page-link"
					   asp-controller="Owner"
					   asp-action="All"
					   asp-route-currentPage="@pager.TotalPages"
					   asp-route-ownersPerPage="@Model.OwnersPerPage"
					   asp-route-searchString="@Model.SearchString"
					   asp-route-ownerSorting="@((int)Model.OwnerSorting)">Last</a>
				</li>
			}

		</ul>
	}
</div>